# OASIS_START
# DO NOT EDIT (digest: 3e936f5f715c1a592747c9574f33f223)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library gsl
"lib/gsl.cmxs": use_gsl
<lib/*.ml{,i,y}>: oasis_library_gsl_ccopt
"lib/mlgsl_blas.c": oasis_library_gsl_ccopt
"lib/mlgsl_blas_complex.c": oasis_library_gsl_ccopt
"lib/mlgsl_blas_complex_float.c": oasis_library_gsl_ccopt
"lib/mlgsl_blas_float.c": oasis_library_gsl_ccopt
"lib/mlgsl_bspline.c": oasis_library_gsl_ccopt
"lib/mlgsl_cdf.c": oasis_library_gsl_ccopt
"lib/mlgsl_cheb.c": oasis_library_gsl_ccopt
"lib/mlgsl_combi.c": oasis_library_gsl_ccopt
"lib/mlgsl_complex.c": oasis_library_gsl_ccopt
"lib/mlgsl_deriv.c": oasis_library_gsl_ccopt
"lib/mlgsl_eigen.c": oasis_library_gsl_ccopt
"lib/mlgsl_error.c": oasis_library_gsl_ccopt
"lib/mlgsl_fft.c": oasis_library_gsl_ccopt
"lib/mlgsl_fit.c": oasis_library_gsl_ccopt
"lib/mlgsl_fun.c": oasis_library_gsl_ccopt
"lib/mlgsl_histo.c": oasis_library_gsl_ccopt
"lib/mlgsl_ieee.c": oasis_library_gsl_ccopt
"lib/mlgsl_integration.c": oasis_library_gsl_ccopt
"lib/mlgsl_interp.c": oasis_library_gsl_ccopt
"lib/mlgsl_linalg.c": oasis_library_gsl_ccopt
"lib/mlgsl_linalg_complex.c": oasis_library_gsl_ccopt
"lib/mlgsl_math.c": oasis_library_gsl_ccopt
"lib/mlgsl_matrix_complex.c": oasis_library_gsl_ccopt
"lib/mlgsl_matrix_complex_float.c": oasis_library_gsl_ccopt
"lib/mlgsl_matrix_double.c": oasis_library_gsl_ccopt
"lib/mlgsl_matrix_float.c": oasis_library_gsl_ccopt
"lib/mlgsl_min.c": oasis_library_gsl_ccopt
"lib/mlgsl_monte.c": oasis_library_gsl_ccopt
"lib/mlgsl_multifit.c": oasis_library_gsl_ccopt
"lib/mlgsl_multimin.c": oasis_library_gsl_ccopt
"lib/mlgsl_multiroots.c": oasis_library_gsl_ccopt
"lib/mlgsl_odeiv.c": oasis_library_gsl_ccopt
"lib/mlgsl_permut.c": oasis_library_gsl_ccopt
"lib/mlgsl_poly.c": oasis_library_gsl_ccopt
"lib/mlgsl_qrng.c": oasis_library_gsl_ccopt
"lib/mlgsl_randist.c": oasis_library_gsl_ccopt
"lib/mlgsl_rng.c": oasis_library_gsl_ccopt
"lib/mlgsl_roots.c": oasis_library_gsl_ccopt
"lib/mlgsl_sf.c": oasis_library_gsl_ccopt
"lib/mlgsl_sort.c": oasis_library_gsl_ccopt
"lib/mlgsl_stats.c": oasis_library_gsl_ccopt
"lib/mlgsl_sum.c": oasis_library_gsl_ccopt
"lib/mlgsl_vector_double.c": oasis_library_gsl_ccopt
"lib/mlgsl_vector_float.c": oasis_library_gsl_ccopt
"lib/mlgsl_wavelet.c": oasis_library_gsl_ccopt
<lib/gsl.{cma,cmxa}>: oasis_library_gsl_cclib
"lib/libgsl_stubs.lib": oasis_library_gsl_cclib
"lib/dllgsl_stubs.dll": oasis_library_gsl_cclib
"lib/libgsl_stubs.a": oasis_library_gsl_cclib
"lib/dllgsl_stubs.so": oasis_library_gsl_cclib
<lib/gsl.{cma,cmxa}>: use_libgsl_stubs
<lib/*.ml{,i,y}>: pkg_bigarray
"lib/mlgsl_blas.c": pkg_bigarray
"lib/mlgsl_blas_complex.c": pkg_bigarray
"lib/mlgsl_blas_complex_float.c": pkg_bigarray
"lib/mlgsl_blas_float.c": pkg_bigarray
"lib/mlgsl_bspline.c": pkg_bigarray
"lib/mlgsl_cdf.c": pkg_bigarray
"lib/mlgsl_cheb.c": pkg_bigarray
"lib/mlgsl_combi.c": pkg_bigarray
"lib/mlgsl_complex.c": pkg_bigarray
"lib/mlgsl_deriv.c": pkg_bigarray
"lib/mlgsl_eigen.c": pkg_bigarray
"lib/mlgsl_error.c": pkg_bigarray
"lib/mlgsl_fft.c": pkg_bigarray
"lib/mlgsl_fit.c": pkg_bigarray
"lib/mlgsl_fun.c": pkg_bigarray
"lib/mlgsl_histo.c": pkg_bigarray
"lib/mlgsl_ieee.c": pkg_bigarray
"lib/mlgsl_integration.c": pkg_bigarray
"lib/mlgsl_interp.c": pkg_bigarray
"lib/mlgsl_linalg.c": pkg_bigarray
"lib/mlgsl_linalg_complex.c": pkg_bigarray
"lib/mlgsl_math.c": pkg_bigarray
"lib/mlgsl_matrix_complex.c": pkg_bigarray
"lib/mlgsl_matrix_complex_float.c": pkg_bigarray
"lib/mlgsl_matrix_double.c": pkg_bigarray
"lib/mlgsl_matrix_float.c": pkg_bigarray
"lib/mlgsl_min.c": pkg_bigarray
"lib/mlgsl_monte.c": pkg_bigarray
"lib/mlgsl_multifit.c": pkg_bigarray
"lib/mlgsl_multimin.c": pkg_bigarray
"lib/mlgsl_multiroots.c": pkg_bigarray
"lib/mlgsl_odeiv.c": pkg_bigarray
"lib/mlgsl_permut.c": pkg_bigarray
"lib/mlgsl_poly.c": pkg_bigarray
"lib/mlgsl_qrng.c": pkg_bigarray
"lib/mlgsl_randist.c": pkg_bigarray
"lib/mlgsl_rng.c": pkg_bigarray
"lib/mlgsl_roots.c": pkg_bigarray
"lib/mlgsl_sf.c": pkg_bigarray
"lib/mlgsl_sort.c": pkg_bigarray
"lib/mlgsl_stats.c": pkg_bigarray
"lib/mlgsl_sum.c": pkg_bigarray
"lib/mlgsl_vector_double.c": pkg_bigarray
"lib/mlgsl_vector_float.c": pkg_bigarray
"lib/mlgsl_wavelet.c": pkg_bigarray
# Executable blas_ex
<examples/blas_ex.{native,byte}>: pkg_bigarray
<examples/blas_ex.{native,byte}>: use_gsl
# Executable blas_speed_test
<examples/blas_speed_test.{native,byte}>: pkg_bigarray
<examples/blas_speed_test.{native,byte}>: use_gsl
# Executable bspline_ex
<examples/bspline_ex.{native,byte}>: pkg_bigarray
<examples/bspline_ex.{native,byte}>: use_gsl
# Executable cheb_ex
<examples/cheb_ex.{native,byte}>: pkg_bigarray
<examples/cheb_ex.{native,byte}>: use_gsl
# Executable combi_ex
<examples/combi_ex.{native,byte}>: pkg_bigarray
<examples/combi_ex.{native,byte}>: use_gsl
# Executable const_ex
<examples/const_ex.{native,byte}>: pkg_bigarray
<examples/const_ex.{native,byte}>: use_gsl
# Executable deriv_ex
<examples/deriv_ex.{native,byte}>: pkg_bigarray
<examples/deriv_ex.{native,byte}>: use_gsl
# Executable eigen_ex
<examples/eigen_ex.{native,byte}>: pkg_bigarray
<examples/eigen_ex.{native,byte}>: use_gsl
# Executable fft_c
<examples/fft_c.{native,byte}>: pkg_bigarray
<examples/fft_c.{native,byte}>: use_gsl
# Executable fft_c2
<examples/fft_c2.{native,byte}>: pkg_bigarray
<examples/fft_c2.{native,byte}>: use_gsl
# Executable fft_hc
<examples/fft_hc.{native,byte}>: pkg_bigarray
<examples/fft_hc.{native,byte}>: use_gsl
# Executable fit_ex
<examples/fit_ex.{native,byte}>: pkg_bigarray
<examples/fit_ex.{native,byte}>: use_gsl
# Executable histo_ex
<examples/histo_ex.{native,byte}>: pkg_bigarray
<examples/histo_ex.{native,byte}>: use_gsl
# Executable integration_ex
<examples/integration_ex.{native,byte}>: pkg_bigarray
<examples/integration_ex.{native,byte}>: use_gsl
# Executable interp_ex
<examples/interp_ex.{native,byte}>: pkg_bigarray
<examples/interp_ex.{native,byte}>: use_gsl
# Executable linalg_ex
<examples/linalg_ex.{native,byte}>: pkg_bigarray
<examples/linalg_ex.{native,byte}>: use_gsl
# Executable min_ex
<examples/min_ex.{native,byte}>: pkg_bigarray
<examples/min_ex.{native,byte}>: use_gsl
# Executable monte_ex
<examples/monte_ex.{native,byte}>: pkg_bigarray
<examples/monte_ex.{native,byte}>: use_gsl
# Executable multifit_data_ex
<examples/multifit_data_ex.{native,byte}>: pkg_bigarray
<examples/multifit_data_ex.{native,byte}>: use_gsl
# Executable multifit_ex
<examples/multifit_ex.{native,byte}>: pkg_bigarray
<examples/multifit_ex.{native,byte}>: pkg_camlp4
<examples/multifit_ex.{native,byte}>: use_gsl
<examples/*.ml{,i,y}>: pkg_camlp4
# Executable multifit_nlin_ex
<examples/multifit_nlin_ex.{native,byte}>: pkg_bigarray
<examples/multifit_nlin_ex.{native,byte}>: use_gsl
# Executable multimin_ex
<examples/multimin_ex.{native,byte}>: pkg_bigarray
<examples/multimin_ex.{native,byte}>: use_gsl
# Executable multiroot_ex
<examples/multiroot_ex.{native,byte}>: pkg_bigarray
<examples/multiroot_ex.{native,byte}>: use_gsl
# Executable odeiv_ex
<examples/odeiv_ex.{native,byte}>: pkg_bigarray
<examples/odeiv_ex.{native,byte}>: use_gsl
# Executable permut_ex
<examples/permut_ex.{native,byte}>: pkg_bigarray
<examples/permut_ex.{native,byte}>: use_gsl
# Executable qrng_ex
<examples/qrng_ex.{native,byte}>: pkg_bigarray
<examples/qrng_ex.{native,byte}>: use_gsl
# Executable rng_ex
<examples/rng_ex.{native,byte}>: pkg_bigarray
<examples/rng_ex.{native,byte}>: use_gsl
# Executable root_ex
<examples/root_ex.{native,byte}>: pkg_bigarray
<examples/root_ex.{native,byte}>: use_gsl
# Executable siman_ex
<examples/siman_ex.{native,byte}>: pkg_bigarray
<examples/siman_ex.{native,byte}>: use_gsl
# Executable siman_tsp_ex
<examples/siman_tsp_ex.{native,byte}>: pkg_bigarray
<examples/siman_tsp_ex.{native,byte}>: use_gsl
# Executable stats_ex
<examples/stats_ex.{native,byte}>: pkg_bigarray
<examples/stats_ex.{native,byte}>: use_gsl
# Executable sum_ex
<examples/sum_ex.{native,byte}>: pkg_bigarray
<examples/sum_ex.{native,byte}>: use_gsl
# Executable wavelet_ex
<examples/wavelet_ex.{native,byte}>: pkg_bigarray
<examples/wavelet_ex.{native,byte}>: use_gsl
<examples/*.ml{,i,y}>: pkg_bigarray
<examples/*.ml{,i,y}>: use_gsl
# OASIS_STOP

true: -traverse
<{lib,examples}/**>: traverse

<**/*.ml{,i}>: warn(Aer-44), strict_sequence, safe_string, annot

<examples/multifit_ex.ml>: camlp4of

"lib/gsl.cmxs": use_libgsl_stubs
<**/*>: no_alias_deps
